{"version":3,"sources":["components/Square.js","helpers/Utils.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","react_default","a","createElement","className","isWin","onClick","value","calculateWinner","squares","lines","i","length","_lines$i","Object","slicedToArray","b","c","line","player","Board","_this","this","current","winner","Utils","indexOf","components_Square","key","items","item","j","index","push","renderSquare","React","Component","Game","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","location","xIsNext","stepNumber","sort","slice","setState","concat","step","rows","_this2","historySort","reverse","status","moves","map","move","moveSort","Math","abs","desc","getMoveLocation","setActiveMove","jumpTo","components_Board","handleClick","title","handleClickSort","ReactDOM","render","components_Game","document","getElementById"],"mappings":"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","file":"static/js/main.66e1ef36.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square(props) {\n\treturn (\n\t\t<button \n\t\t\tclassName={\"square \" +props.isWin} \n\t\t\tonClick={() => props.onClick()}\n\t\t>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}\n\nexport default Square;","/* Utils.js */\n/* This file contains functions you can use anywhere in your application */\n\nexport function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        line: lines[i],\n        player: squares[a]\n      };\n    }\n  }\n  return null;\n}\n\nexport function findRow(location) {\n  let rows = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n  ];\n  for (let i = 0; i < rows.length; i++) {\n    if(rows[i].indexOf(location) > -1)\n      return i + 1;\n  }\n  return null;\n}","import React from 'react';\nimport Square from './Square';\nimport * as Utils from '../helpers/Utils';\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    const current = this.props.squares[i];\n    const winner = Utils.calculateWinner(this.props.squares);\n    \n    let isWin = \"\";\n    if(winner)\n      isWin = winner.line.indexOf(i) > -1 ? \"win\" : \"\";\n\n    return (\n      <Square \n        value={current} \n        onClick={() => this.props.onClick(i)}\n        key={i}\n        isWin={isWin}\n        />\n    );\n  }\n\n  render() {\n    let items = [];\n    for (let i = 0; i < 3; i++) {\n      let item = [];\n      for (let j = 0; j < 3; j++) {\n        let index = (i * 3) + j;\n        item.push(this.renderSquare(index));\n      }\n      items.push(<div className=\"board-row\" key={i} >{item}</div>);\n    }\n    return (\n      <div>\n        {items}\n      </div>\n    );\n  }\n}\n\nexport default Board;","import React from 'react';\nimport Board from './Board';\nimport * as Utils from '../helpers/Utils';\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tsquares: Array(9).fill(null),\n        location: null,\n\t\t\t}],\n\t\t\txIsNext: true,\n\t\t\tstepNumber: 0,\n      sort: \"asc\",\n\t\t};\n\t}\n\thandleClick(i) {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst squares = current.squares.slice();\n\t\tif(Utils.calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\t\tthis.setState({\n\t\t\thistory: history.concat([{\n\t\t\t\tsquares: squares,\n        location: i,\n\t\t\t}]),\n\t\t\txIsNext: !this.state.xIsNext,\n\t\t\tstepNumber: history.length,\n\t\t});\n\t}\n  handleClickSort(i) {\n    this.setState({\n      sort: this.state.sort === \"desc\" ? \"asc\" : \"desc\",\n    });\n  }\n\tjumpTo(step) {\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: (step %2) === 0,\n\t\t});\n\t}\n  getMoveLocation(step) {\n    if(step.location != null) {\n      let col, row;\n\n      col = (step.location % 3) + 1;\n      row = Utils.findRow(step.location);\n\n      return \"(\" + col + \", \" + row + \")\"\n    }\n    return \"\";\n  }\n  setActiveMove(step) {\n    if(step === this.state.stepNumber)\n      return \"active\";\n    return \"\";\n  }\n  render() {\n  \tconst history = this.state.history;\n  \tconst current = history[this.state.stepNumber];\n  \tconst winner = Utils.calculateWinner(current.squares);\n\n    let historySort = history.slice();\n    if(this.state.sort === \"desc\")\n      historySort = historySort.reverse();\n\n  \tconst moves = historySort.map((step, move) => {\n      let moveSort = move;\n      if(this.state.sort === \"desc\")\n        moveSort = Math.abs((historySort.length - 1) - move);\n\n  \t\tconst desc = moveSort ? \n  \t\t\t'Go to move #' + moveSort + \" - \" + this.getMoveLocation(step):\n  \t\t\t'Go to game start';\n  \t\treturn (\n  \t\t\t<li \n          key={moveSort} \n          className={this.setActiveMove(moveSort)} \n        >\n  \t\t\t\t<button onClick={() => this.jumpTo(moveSort)}>{desc}</button>\n  \t\t\t</li>\n  \t\t);\n  \t});\n\n  \tlet status;\n  \tif(winner) {\n  \t\tstatus = 'Winner: ' + winner.player;\n  \t} else if(this.state.stepNumber === 9 && !winner) {\n      status = 'Result: Draw';\n    } else {\n  \t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n  \t}\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n          \tsquares={current.squares}\n          \tonClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <div className=\"width-60\">\n            Sort:\n            <a title={this.state.sort === \"desc\" ? \"Ascending\" : \"Descending\"}\n              className={\"sort sort-\" + this.state.sort}\n              onClick={(i) => this.handleClickSort(i)}\n            >sort</a>\n          </div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\nimport './index.css';\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);"],"sourceRoot":""}